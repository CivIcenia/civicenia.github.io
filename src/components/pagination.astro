---
import { type Page } from "astro";
import { Astros, Nullish } from "../helpers";

interface Props {
    page: Page
}

if (typeof Astro.props?.page?.currentPage !== "number") {
    return "";
}

const page = Astro.props.page;
if (page.lastPage === 1) {
    return "";
}

const entries = await Promise.resolve()
    .then(() => Astros.paginate(page))
    .then((entries) => entries.map((entry) => {
        if (entry === "...") {
            return "...";
        }
        return [entry, entry === page.currentPage];
    }));

function paginatedLink(
    url: URL,
    pageNumber: number
): URL {
    if (pageNumber === 1) {
        return new URL("./", url);
    }
    return new URL(pageNumber.toString(), url);
}
---
<nav class="govuk-pagination" role="navigation" aria-label="Pagination">
    {Nullish.exists(page.url.prev) ? (
        <div class="govuk-pagination__prev">
            <a class="govuk-link govuk-pagination__link" href={page.url.prev} rel="prev">
                <svg class="govuk-pagination__icon govuk-pagination__icon--prev" xmlns="http://www.w3.org/2000/svg" height="13" width="15" aria-hidden="true" focusable="false" viewBox="0 0 15 13">
                    <path d="m6.5938-0.0078125-6.7266 6.7266 6.7441 6.4062 1.377-1.449-4.1856-3.9768h12.896v-2h-12.984l4.2931-4.293-1.414-1.414z"></path>
                </svg>
                <span class="govuk-pagination__link-title">Previous<span class="govuk-visually-hidden"> page</span></span>
            </a>
        </div>
    ) : ``}
    <ul class="govuk-pagination__list">
        {entries.map((page) => {
            if (page === "...") {
                return (
                    <li class="govuk-pagination__item govuk-pagination__item--ellipses">
                        &ctdot;
                    </li>
                );
            }
            const [pageNumber, isCurrent] = page;
            return (
                <li class={`govuk-pagination__item ${isCurrent ? `govuk-pagination__item--current` : ``}`}>
                    <a class="govuk-link govuk-pagination__link" href={paginatedLink(Astro.url, pageNumber)} aria-label=`Page ${pageNumber}` aria-current="page">
                        {pageNumber}
                    </a>
                </li>
            );
        })}
    </ul>
    {Nullish.exists(page.url.next) ? (
        <div class="govuk-pagination__next">
            <a class="govuk-link govuk-pagination__link" href={page.url.next} rel="next">
                <span class="govuk-pagination__link-title">Next<span class="govuk-visually-hidden"> page</span></span>
                <svg class="govuk-pagination__icon govuk-pagination__icon--next" xmlns="http://www.w3.org/2000/svg" height="13" width="15" aria-hidden="true" focusable="false" viewBox="0 0 15 13">
                    <path d="m8.107-0.0078125-1.4136 1.414 4.2926 4.293h-12.986v2h12.896l-4.1855 3.9766 1.377 1.4492 6.7441-6.4062-6.7246-6.7266z"></path>
                </svg>
            </a>
        </div>
    ) : ``}
</nav>
